pipeline {
  agent any

  parameters {
    string(defaultValue: "lastSuccessfulBuild", description: 'What build version? (ex.: v0.0.0)', name: 'BUILD_VERSION')
    choice(choices: ['TEST', 'STAGING', 'PRODUCTION'], description: 'What environment?', name: 'ENVIRONMENT')
  }

  stages {
    stage('Validate release') {
      steps {
        copyArtifacts filter: 'package/*', fingerprintArtifacts: true, selector: specific(params.BUILD_VERSION), projectName: 'build-master'
      }
    }

    stage('Deploy') {
      steps {
        writeFile file: 'known_hosts', text: '35.204.225.91 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBP1nn8ISV4RqplDmyGw+hAoQhbb7qEMBOHKkTmhw+7JcPWffVMolz/OY7Bby7xqxVrwNhzA19qkHR2lfVhdn3VY='
        withCredentials([sshUserPrivateKey(credentialsId: 'gcloud-test-ssh', keyFileVariable: 'identity', passphraseVariable: '', usernameVariable: 'userName')]) {
          script {
            def workspace = pwd()
            def remote = [:]
            remote.name = '35.204.225.91'
            remote.host = '35.204.225.91'
            remote.user = userName
            remote.identity = identity
            remote.knownHosts = "${workspace}/known_hosts"

            sshCommand remote: remote, command: "rm -rf /var/www/temp_deploy/dist/"
            sshCommand remote: remote, command: "mkdir -p /var/www/temp_deploy"
          }

          sh "scp -i ${SSH_PRIVATE_KEY} package/* jenkins@35.204.225.91:/var/www/temp_deploy/dist/"

          //sh "ssh -i ${SSH_PRIVATE_KEY} jenkins@35.204.225.91 rm -rf /var/www/temp_deploy/dist/"
          //sh "ssh -i ${SSH_PRIVATE_KEY} jenkins@35.204.225.91 mkdir -p /var/www/temp_deploy"
          //sh "scp -i ${SSH_PRIVATE_KEY} package/* jenkins@35.204.225.91:/var/www/temp_deploy/dist/"
        }
      }
    }
  }
}
